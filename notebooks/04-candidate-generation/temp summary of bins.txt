temp summary of bins

check_summary_of_bins = False

if check_summary_of_bins:
    # Summary statistics by cluster and bin
    df_bin_stats = (
        df_user_cluster_quantiles.groupby(["cluster_id", "bin"], observed=False)
        .agg(
            min_time=("total_time_watched_seconds", "min"),
            max_time=("total_time_watched_seconds", "max"),
            avg_time=("total_time_watched_seconds", "mean"),
            user_count=("user_id", "nunique"),
            list_videos_watched=("list_videos_watched", "sum"),
        )
        .reset_index()
    )
    df_bin_stats["count_videos_watched"] = df_bin_stats["list_videos_watched"].apply(
        lambda x: len(set(x))
    )
    df_bin_stats["count_videos_watched"] = df_bin_stats["list_videos_watched"].apply(
        lambda x: len(set(x))
    )

    for i in df_bin_stats["cluster_id"].unique().tolist():
        print(f"cluster_id: {i}")
        display(df_bin_stats[df_bin_stats["cluster_id"] == i])
        print(
            f"user_count: {df_bin_stats[df_bin_stats['cluster_id'] == i]['user_count'].nunique()}"
        )
        print(
            f"user_id: {df_user_cluster_quantiles[df_user_cluster_quantiles['cluster_id'] == i]['user_id'].nunique()}"
        )

        assert (
            df_bin_stats[df_bin_stats["cluster_id"] == i]["user_count"].sum()
            == df_user_cluster_quantiles[df_user_cluster_quantiles["cluster_id"] == i][
                "user_id"
            ].nunique()
        )
        print("-" * 100)

    display(df_bin_stats.head(30))
# %%
